{"version":3,"file":"static/js/370.2a41d2ed.chunk.js","mappings":"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","sources":["../../src/config.ts","../../src/endpoint.ts","../../src/index.ts","../../../src/types/chains.ts","../../../src/types/common.ts","../../../src/types/decoded-data.ts","../../../src/types/notifications.ts","../../../src/types/safe-apps.ts","../../../src/types/safe-info.ts","../../../src/types/safe-messages.ts","../../../src/types/transactions.ts","../../src/utils.ts","../node_modules/@safe-global/safe-apps-sdk/src/version.ts","../node_modules/@safe-global/safe-apps-sdk/src/communication/utils.ts","../node_modules/@safe-global/safe-apps-sdk/src/communication/messageFormatter.ts","../node_modules/@safe-global/safe-apps-sdk/src/communication/methods.ts","../node_modules/@safe-global/safe-apps-sdk/src/communication/index.ts","../node_modules/@safe-global/safe-apps-sdk/src/types/sdk.ts","../node_modules/@safe-global/safe-apps-sdk/src/txs/index.ts","../node_modules/@safe-global/safe-apps-sdk/src/eth/constants.ts","../node_modules/@safe-global/safe-apps-sdk/src/eth/index.ts","../node_modules/viem/utils/abi/prepareEncodeFunctionData.ts","../node_modules/viem/utils/abi/encodeFunctionData.ts","../node_modules/viem/utils/signature/hashMessage.ts","../node_modules/viem/utils/signature/toPrefixedMessage.ts","../node_modules/viem/errors/typedData.ts","../node_modules/viem/utils/typedData.ts","../node_modules/viem/utils/signature/hashTypedData.ts","../node_modules/@safe-global/safe-apps-sdk/src/safe/signatures.ts","../node_modules/@safe-global/safe-apps-sdk/src/types/permissions.ts","../node_modules/@safe-global/safe-apps-sdk/src/wallet/index.ts","../node_modules/@safe-global/safe-apps-sdk/src/decorators/requirePermissions.ts","../node_modules/@safe-global/safe-apps-sdk/src/safe/index.ts","../node_modules/@safe-global/safe-apps-sdk/src/sdk.ts","../node_modules/@safe-global/safe-apps-sdk/src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,"export const getSDKVersion = () => '9.1.0';\n","// i.e. 0-255 -> '00'-'ff'\nconst dec2hex = (dec: number): string => dec.toString(16).padStart(2, '0');\n\nconst generateId = (len: number): string => {\n  const arr = new Uint8Array((len || 40) / 2);\n  window.crypto.getRandomValues(arr);\n  return Array.from(arr, dec2hex).join('');\n};\n\nconst generateRequestId = (): string => {\n  if (typeof window !== 'undefined') {\n    return generateId(10);\n  }\n\n  return new Date().getTime().toString(36);\n};\n\nexport { generateRequestId };\n","import { ErrorResponse, SDKRequestData, RequestId, SuccessResponse, MethodToResponse } from '../types/index.js';\nimport { getSDKVersion } from '../version.js';\nimport { Methods } from './methods.js';\nimport { generateRequestId } from './utils.js';\n\nclass MessageFormatter {\n  static makeRequest = <M extends Methods = Methods, P = unknown>(method: M, params: P): SDKRequestData<M, P> => {\n    const id = generateRequestId();\n\n    return {\n      id,\n      method,\n      params,\n      env: {\n        sdkVersion: getSDKVersion(),\n      },\n    };\n  };\n\n  static makeResponse = (id: RequestId, data: MethodToResponse[Methods], version: string): SuccessResponse => ({\n    id,\n    success: true,\n    version,\n    data,\n  });\n\n  static makeErrorResponse = (id: RequestId, error: string, version: string): ErrorResponse => ({\n    id,\n    success: false,\n    error,\n    version,\n  });\n}\n\nexport { MessageFormatter };\n","export enum Methods {\n  sendTransactions = 'sendTransactions',\n  rpcCall = 'rpcCall',\n  getChainInfo = 'getChainInfo',\n  getSafeInfo = 'getSafeInfo',\n  getTxBySafeTxHash = 'getTxBySafeTxHash',\n  getSafeBalances = 'getSafeBalances',\n  signMessage = 'signMessage',\n  signTypedMessage = 'signTypedMessage',\n  getEnvironmentInfo = 'getEnvironmentInfo',\n  getOffChainSignature = 'getOffChainSignature',\n  requestAddressBook = 'requestAddressBook',\n  wallet_getPermissions = 'wallet_getPermissions',\n  wallet_requestPermissions = 'wallet_requestPermissions',\n}\n\nexport enum RestrictedMethods {\n  requestAddressBook = 'requestAddressBook',\n}\n","import { MessageFormatter } from './messageFormatter.js';\nimport { Methods } from './methods.js';\nimport { InterfaceMessageEvent, Communicator, Response, SuccessResponse } from '../types/index.js';\n\n// eslint-disable-next-line\ntype Callback = (response: any) => void;\n\nclass PostMessageCommunicator implements Communicator {\n  private readonly allowedOrigins: RegExp[] | null = null;\n  private callbacks = new Map<string, Callback>();\n  private debugMode = false;\n  private isServer = typeof window === 'undefined';\n\n  constructor(allowedOrigins: RegExp[] | null = null, debugMode = false) {\n    this.allowedOrigins = allowedOrigins;\n    this.debugMode = debugMode;\n\n    if (!this.isServer) {\n      window.addEventListener('message', this.onParentMessage);\n    }\n  }\n\n  private isValidMessage = ({ origin, data, source }: InterfaceMessageEvent): boolean => {\n    const emptyOrMalformed = !data;\n    const sentFromParentEl = !this.isServer && source === window.parent;\n    const majorVersionNumber = typeof data.version !== 'undefined' && parseInt(data.version.split('.')[0]);\n    const allowedSDKVersion = typeof majorVersionNumber === 'number' && majorVersionNumber >= 1;\n    let validOrigin = true;\n    if (Array.isArray(this.allowedOrigins)) {\n      validOrigin = this.allowedOrigins.find((regExp) => regExp.test(origin)) !== undefined;\n    }\n\n    return !emptyOrMalformed && sentFromParentEl && allowedSDKVersion && validOrigin;\n  };\n\n  private logIncomingMessage = (msg: InterfaceMessageEvent): void => {\n    console.info(`Safe Apps SDK v1: A message was received from origin ${msg.origin}. `, msg.data);\n  };\n\n  private onParentMessage = (msg: InterfaceMessageEvent): void => {\n    if (this.isValidMessage(msg)) {\n      this.debugMode && this.logIncomingMessage(msg);\n      this.handleIncomingMessage(msg.data);\n    }\n  };\n\n  private handleIncomingMessage = (payload: InterfaceMessageEvent['data']): void => {\n    const { id } = payload;\n\n    const cb = this.callbacks.get(id);\n    if (cb) {\n      cb(payload);\n\n      this.callbacks.delete(id);\n    }\n  };\n\n  public send = <M extends Methods, P, R>(method: M, params: P): Promise<SuccessResponse<R>> => {\n    const request = MessageFormatter.makeRequest(method, params);\n\n    if (this.isServer) {\n      throw new Error(\"Window doesn't exist\");\n    }\n\n    window.parent.postMessage(request, '*');\n    return new Promise((resolve, reject) => {\n      this.callbacks.set(request.id, (response: Response<R>) => {\n        if (!response.success) {\n          reject(new Error(response.error));\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  };\n}\n\nexport default PostMessageCommunicator;\nexport * from './methods.js';\n","import { ChainInfo as _ChainInfo } from '@safe-global/safe-gateway-typescript-sdk';\n\nexport type ChainInfo = Pick<\n  _ChainInfo,\n  'chainName' | 'chainId' | 'shortName' | 'nativeCurrency' | 'blockExplorerUriTemplate'\n>;\n\nexport { NativeCurrency } from '@safe-global/safe-gateway-typescript-sdk';\n\nexport type BaseTransaction = {\n  to: string;\n  value: string;\n  data: string;\n};\n\nexport type GetTxBySafeTxHashParams = {\n  safeTxHash: string;\n};\n\nexport interface SendTransactionRequestParams {\n  safeTxGas?: number;\n}\n\nexport interface SendTransactionsParams {\n  txs: BaseTransaction[];\n  params?: SendTransactionRequestParams;\n}\n\nexport type GetBalanceParams = { currency?: string };\n\nexport type SignMessageParams = {\n  message: string;\n};\n\nexport interface TypedDataDomain {\n  name?: string;\n  version?: string;\n  chainId?: string | number | bigint | { toNumber: () => number };\n  verifyingContract?: string;\n  salt?: string;\n}\n\nexport interface TypedDataTypes {\n  name: string;\n  type: string;\n}\n\nexport type TypedMessageTypes = { [key: string]: TypedDataTypes[] };\n\nexport type EIP712TypedData = {\n  domain: TypedDataDomain;\n  types: TypedMessageTypes;\n  message: Record<string, any>;\n  primaryType?: string;\n};\n\nexport type SignTypedMessageParams = {\n  typedData: EIP712TypedData;\n};\n\nexport type SendTransactionsResponse = {\n  safeTxHash: string;\n};\n\nexport type OffChainSignMessageResponse = {\n  messageHash: string;\n};\n\nexport type SignMessageResponse = SendTransactionsResponse | OffChainSignMessageResponse;\n\nexport type SafeInfo = {\n  safeAddress: string;\n  chainId: number;\n  threshold: number;\n  owners: string[];\n  isReadOnly: boolean;\n};\n\nexport type SafeInfoExtended = SafeInfo & {\n  nonce: number;\n  implementation: string;\n  modules: string[] | null;\n  fallbackHandler: string | null;\n  guard: string | null;\n  version: string | null;\n};\n\nexport type EnvironmentInfo = {\n  origin: string;\n};\n\nexport type PostMessageOptions = {\n  transfer?: any[];\n};\n\nexport type AddressBookItem = {\n  address: string;\n  chainId: string;\n  name: string;\n};\n\nexport const isObjectEIP712TypedData = (obj?: unknown): obj is EIP712TypedData => {\n  return typeof obj === 'object' && obj != null && 'domain' in obj && 'types' in obj && 'message' in obj;\n};\n","import { Methods } from '../communication/methods.js';\nimport {\n  GatewayTransactionDetails,\n  SignMessageParams,\n  SendTransactionsParams,\n  GetTxBySafeTxHashParams,\n  Communicator,\n  SendTransactionsResponse,\n  SignTypedMessageParams,\n  EIP712TypedData,\n  isObjectEIP712TypedData,\n  SignMessageResponse,\n} from '../types/index.js';\n\nclass TXs {\n  private readonly communicator: Communicator;\n\n  constructor(communicator: Communicator) {\n    this.communicator = communicator;\n  }\n\n  async getBySafeTxHash(safeTxHash: string): Promise<GatewayTransactionDetails> {\n    if (!safeTxHash) {\n      throw new Error('Invalid safeTxHash');\n    }\n\n    const response = await this.communicator.send<\n      Methods.getTxBySafeTxHash,\n      GetTxBySafeTxHashParams,\n      GatewayTransactionDetails\n    >(Methods.getTxBySafeTxHash, { safeTxHash });\n\n    return response.data;\n  }\n\n  async signMessage(message: string): Promise<SignMessageResponse> {\n    const messagePayload = {\n      message,\n    };\n\n    const response = await this.communicator.send<Methods.signMessage, SignMessageParams, SignMessageResponse>(\n      Methods.signMessage,\n      messagePayload,\n    );\n\n    return response.data;\n  }\n\n  async signTypedMessage(typedData: EIP712TypedData): Promise<SignMessageResponse> {\n    if (!isObjectEIP712TypedData(typedData)) {\n      throw new Error('Invalid typed data');\n    }\n\n    const response = await this.communicator.send<\n      Methods.signTypedMessage,\n      SignTypedMessageParams,\n      SignMessageResponse\n    >(Methods.signTypedMessage, { typedData });\n\n    return response.data;\n  }\n\n  async send({ txs, params }: SendTransactionsParams): Promise<SendTransactionsResponse> {\n    if (!txs || !txs.length) {\n      throw new Error('No transactions were passed');\n    }\n\n    const messagePayload = {\n      txs,\n      params,\n    };\n\n    const response = await this.communicator.send<\n      Methods.sendTransactions,\n      SendTransactionsParams,\n      SendTransactionsResponse\n    >(Methods.sendTransactions, messagePayload);\n\n    return response.data;\n  }\n}\n\nexport { TXs };\n","export const RPC_CALLS = {\n  eth_call: 'eth_call',\n  eth_gasPrice: 'eth_gasPrice',\n  eth_getLogs: 'eth_getLogs',\n  eth_getBalance: 'eth_getBalance',\n  eth_getCode: 'eth_getCode',\n  eth_getBlockByHash: 'eth_getBlockByHash',\n  eth_getBlockByNumber: 'eth_getBlockByNumber',\n  eth_getStorageAt: 'eth_getStorageAt',\n  eth_getTransactionByHash: 'eth_getTransactionByHash',\n  eth_getTransactionReceipt: 'eth_getTransactionReceipt',\n  eth_getTransactionCount: 'eth_getTransactionCount',\n  eth_estimateGas: 'eth_estimateGas',\n  safe_setSettings: 'safe_setSettings',\n} as const;\n","import { RPC_CALLS } from '../eth/constants.js';\nimport {\n  BlockNumberArg,\n  RpcCallNames,\n  Communicator,\n  Log,\n  BlockTransactionString,\n  BlockTransactionObject,\n  Web3TransactionObject,\n  RPCPayload,\n  TransactionConfig,\n  Web3TransactionReceiptObject,\n  PastLogsOptions,\n  SafeSettings,\n} from '../types/index.js';\nimport { Methods } from '../communication/methods.js';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Formatter = (arg: any) => any;\n\nconst inputFormatters: Record<string, Formatter> = {\n  defaultBlockParam: (arg = 'latest') => arg,\n  returnFullTxObjectParam: (arg = false): boolean => arg,\n  blockNumberToHex: (arg: BlockNumberArg): string =>\n    Number.isInteger(arg) ? `0x${arg.toString(16)}` : (arg as string),\n};\n\ntype BuildRequestArgs = {\n  call: RpcCallNames;\n  formatters?: (Formatter | null)[];\n};\n\nclass Eth {\n  public call;\n  public getBalance;\n  public getCode;\n  public getStorageAt;\n  public getPastLogs;\n  public getBlockByHash;\n  public getBlockByNumber;\n  public getTransactionByHash;\n  public getTransactionReceipt;\n  public getTransactionCount;\n  public getGasPrice;\n  public getEstimateGas;\n  public setSafeSettings;\n\n  private readonly communicator: Communicator;\n\n  constructor(communicator: Communicator) {\n    this.communicator = communicator;\n    this.call = this.buildRequest<[TransactionConfig, string?], string>({\n      call: RPC_CALLS.eth_call,\n      formatters: [null, inputFormatters.defaultBlockParam],\n    });\n    this.getBalance = this.buildRequest<[string, string?], string>({\n      call: RPC_CALLS.eth_getBalance,\n      formatters: [null, inputFormatters.defaultBlockParam],\n    });\n    this.getCode = this.buildRequest<[string, string?], string>({\n      call: RPC_CALLS.eth_getCode,\n      formatters: [null, inputFormatters.defaultBlockParam],\n    });\n    this.getStorageAt = this.buildRequest<[string, number, string?], string>({\n      call: RPC_CALLS.eth_getStorageAt,\n      formatters: [null, inputFormatters.blockNumberToHex, inputFormatters.defaultBlockParam],\n    });\n    this.getPastLogs = this.buildRequest<[PastLogsOptions], Log[]>({\n      call: RPC_CALLS.eth_getLogs,\n    });\n    this.getBlockByHash = this.buildRequest<[string, boolean?], BlockTransactionString | BlockTransactionObject>({\n      call: RPC_CALLS.eth_getBlockByHash,\n      formatters: [null, inputFormatters.returnFullTxObjectParam],\n    });\n    this.getBlockByNumber = this.buildRequest<\n      [BlockNumberArg, boolean?],\n      BlockTransactionString | BlockTransactionObject\n    >({\n      call: RPC_CALLS.eth_getBlockByNumber,\n      formatters: [inputFormatters.blockNumberToHex, inputFormatters.returnFullTxObjectParam],\n    });\n    this.getTransactionByHash = this.buildRequest<[string], Web3TransactionObject>({\n      call: RPC_CALLS.eth_getTransactionByHash,\n    });\n    this.getTransactionReceipt = this.buildRequest<[string], Web3TransactionReceiptObject>({\n      call: RPC_CALLS.eth_getTransactionReceipt,\n    });\n    this.getTransactionCount = this.buildRequest<[string, string?], string>({\n      call: RPC_CALLS.eth_getTransactionCount,\n      formatters: [null, inputFormatters.defaultBlockParam],\n    });\n    this.getGasPrice = this.buildRequest<never[], string>({\n      call: RPC_CALLS.eth_gasPrice,\n    });\n    this.getEstimateGas = (transaction: TransactionConfig): Promise<number> =>\n      this.buildRequest<[TransactionConfig], number>({\n        call: RPC_CALLS.eth_estimateGas,\n      })([transaction]);\n    this.setSafeSettings = this.buildRequest<[SafeSettings], SafeSettings>({\n      call: RPC_CALLS.safe_setSettings,\n    });\n  }\n\n  private buildRequest<P = never[], R = unknown>(args: BuildRequestArgs) {\n    const { call, formatters } = args;\n\n    return async (params?: P): Promise<R> => {\n      if (formatters && Array.isArray(params)) {\n        formatters.forEach((formatter: ((...args: unknown[]) => unknown) | null, i) => {\n          if (formatter) {\n            params[i] = formatter(params[i]);\n          }\n        });\n      }\n\n      const payload: RPCPayload<P> = {\n        call,\n        params: params || [],\n      };\n\n      const response = await this.communicator.send<Methods.rpcCall, RPCPayload<P>, R>(Methods.rpcCall, payload);\n\n      return response.data;\n    };\n  }\n}\n\nexport { Eth };\n","import type {\n  Abi,\n  AbiStateMutability,\n  ExtractAbiFunction,\n  ExtractAbiFunctions,\n} from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport type { ConcatHexErrorType } from '../data/concat.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeFunctionData'\n\nexport type PrepareEncodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | Hex | undefined }\n      : { functionName: functionName | allFunctionNames | Hex }\n    : { functionName?: functionName | allFunctionNames | Hex | undefined }\n> &\n  UnionEvaluate<{ args?: allArgs | undefined }> &\n  (hasFunctions extends true ? unknown : never)\n\nexport type PrepareEncodeFunctionDataReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n> = {\n  abi: abi extends Abi\n    ? functionName extends ContractFunctionName<abi>\n      ? [ExtractAbiFunction<abi, functionName>]\n      : abi\n    : Abi\n  functionName: Hex\n}\n\nexport type PrepareEncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function prepareEncodeFunctionData<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: PrepareEncodeFunctionDataParameters<abi, functionName>,\n): PrepareEncodeFunctionDataReturnType<abi, functionName> {\n  const { abi, args, functionName } =\n    parameters as PrepareEncodeFunctionDataParameters\n\n  let abiItem = abi[0]\n  if (functionName) {\n    const item = getAbiItem({\n      abi,\n      args,\n      name: functionName,\n    })\n    if (!item) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n\n  return {\n    abi: [abiItem],\n    functionName: toFunctionSelector(formatAbiItem(abiItem)),\n  } as unknown as PrepareEncodeFunctionDataReturnType<abi, functionName>\n}\n","import type { Abi, AbiStateMutability, ExtractAbiFunctions } from 'abitype'\n\nimport type { AbiFunctionNotFoundErrorType } from '../../errors/abi.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport type { ToFunctionSelectorErrorType } from '../hash/toFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport type { FormatAbiItemErrorType } from './formatAbiItem.js'\nimport type { GetAbiItemErrorType } from './getAbiItem.js'\nimport { prepareEncodeFunctionData } from './prepareEncodeFunctionData.js'\n\nexport type EncodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | Hex\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | Hex | undefined }\n      : { functionName: functionName | allFunctionNames | Hex }\n    : { functionName?: functionName | allFunctionNames | Hex | undefined }\n> &\n  UnionEvaluate<\n    readonly [] extends allArgs\n      ? { args?: allArgs | undefined }\n      : { args: allArgs }\n  > &\n  (hasFunctions extends true ? unknown : never)\n\nexport type EncodeFunctionDataReturnType = Hex\n\nexport type EncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function encodeFunctionData<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: EncodeFunctionDataParameters<abi, functionName>,\n): EncodeFunctionDataReturnType {\n  const { args } = parameters as EncodeFunctionDataParameters\n\n  const { abi, functionName } = (() => {\n    if (\n      parameters.abi.length === 1 &&\n      parameters.functionName?.startsWith('0x')\n    )\n      return parameters as { abi: Abi; functionName: Hex }\n    return prepareEncodeFunctionData(parameters)\n  })()\n\n  const abiItem = abi[0]\n  const signature = functionName\n\n  const data =\n    'inputs' in abiItem && abiItem.inputs\n      ? encodeAbiParameters(abiItem.inputs, args ?? [])\n      : undefined\n  return concatHex([signature, data ?? '0x'])\n}\n","import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { toPrefixedMessage } from './toPrefixedMessage.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashMessageReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type HashMessageErrorType = Keccak256ErrorType | ErrorType\n\nexport function hashMessage<to extends To = 'hex'>(\n  message: SignableMessage,\n  to_?: to | undefined,\n): HashMessageReturnType<to> {\n  return keccak256(toPrefixedMessage(message), to_)\n}\n","import { presignMessagePrefix } from '../../constants/strings.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex, SignableMessage } from '../../types/misc.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { size } from '../data/size.js'\nimport {\n  type BytesToHexErrorType,\n  type StringToHexErrorType,\n  bytesToHex,\n  stringToHex,\n} from '../encoding/toHex.js'\n\nexport type ToPrefixedMessageErrorType =\n  | ConcatErrorType\n  | StringToHexErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\nexport function toPrefixedMessage(message_: SignableMessage): Hex {\n  const message = (() => {\n    if (typeof message_ === 'string') return stringToHex(message_)\n    if (typeof message_.raw === 'string') return message_.raw\n    return bytesToHex(message_.raw)\n  })()\n  const prefix = stringToHex(`${presignMessagePrefix}${size(message)}`)\n  return concat([prefix, message])\n}\n","import type { TypedData } from 'abitype'\n\nimport { stringify } from '../utils/stringify.js'\nimport { BaseError } from './base.js'\n\nexport type InvalidDomainErrorType = InvalidDomainError & {\n  name: 'InvalidDomainError'\n}\nexport class InvalidDomainError extends BaseError {\n  constructor({ domain }: { domain: unknown }) {\n    super(`Invalid domain \"${stringify(domain)}\".`, {\n      metaMessages: ['Must be a valid EIP-712 domain.'],\n    })\n  }\n}\n\nexport type InvalidPrimaryTypeErrorType = InvalidPrimaryTypeError & {\n  name: 'InvalidPrimaryTypeError'\n}\nexport class InvalidPrimaryTypeError extends BaseError {\n  constructor({\n    primaryType,\n    types,\n  }: { primaryType: string; types: TypedData | Record<string, unknown> }) {\n    super(\n      `Invalid primary type \\`${primaryType}\\` must be one of \\`${JSON.stringify(Object.keys(types))}\\`.`,\n      {\n        docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',\n        metaMessages: ['Check that the primary type is a key in `types`.'],\n      },\n    )\n  }\n}\n\nexport type InvalidStructTypeErrorType = InvalidStructTypeError & {\n  name: 'InvalidStructTypeError'\n}\nexport class InvalidStructTypeError extends BaseError {\n  constructor({ type }: { type: string }) {\n    super(`Struct type \"${type}\" is invalid.`, {\n      metaMessages: ['Struct type must not be a Solidity type.'],\n      name: 'InvalidStructTypeError',\n    })\n  }\n}\n","import type { TypedData, TypedDataDomain, TypedDataParameter } from 'abitype'\n\nimport { BytesSizeMismatchError } from '../errors/abi.js'\nimport { InvalidAddressError } from '../errors/address.js'\nimport {\n  InvalidDomainError,\n  InvalidPrimaryTypeError,\n  InvalidStructTypeError,\n} from '../errors/typedData.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Hex } from '../types/misc.js'\nimport type { TypedDataDefinition } from '../types/typedData.js'\nimport { type IsAddressErrorType, isAddress } from './address/isAddress.js'\nimport { type SizeErrorType, size } from './data/size.js'\nimport { type NumberToHexErrorType, numberToHex } from './encoding/toHex.js'\nimport { bytesRegex, integerRegex } from './regex.js'\nimport {\n  type HashDomainErrorType,\n  hashDomain,\n} from './signature/hashTypedData.js'\nimport { stringify } from './stringify.js'\n\nexport type SerializeTypedDataErrorType =\n  | HashDomainErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function serializeTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(parameters: TypedDataDefinition<typedData, primaryType>) {\n  const {\n    domain: domain_,\n    message: message_,\n    primaryType,\n    types,\n  } = parameters as unknown as TypedDataDefinition\n\n  const normalizeData = (\n    struct: readonly TypedDataParameter[],\n    data_: Record<string, unknown>,\n  ) => {\n    const data = { ...data_ }\n    for (const param of struct) {\n      const { name, type } = param\n      if (type === 'address') data[name] = (data[name] as string).toLowerCase()\n    }\n    return data\n  }\n\n  const domain = (() => {\n    if (!types.EIP712Domain) return {}\n    if (!domain_) return {}\n    return normalizeData(types.EIP712Domain, domain_)\n  })()\n\n  const message = (() => {\n    if (primaryType === 'EIP712Domain') return undefined\n    return normalizeData(types[primaryType], message_)\n  })()\n\n  return stringify({ domain, message, primaryType, types })\n}\n\nexport type ValidateTypedDataErrorType =\n  | HashDomainErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function validateTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(parameters: TypedDataDefinition<typedData, primaryType>) {\n  const { domain, message, primaryType, types } =\n    parameters as unknown as TypedDataDefinition\n\n  const validateData = (\n    struct: readonly TypedDataParameter[],\n    data: Record<string, unknown>,\n  ) => {\n    for (const param of struct) {\n      const { name, type } = param\n      const value = data[name]\n\n      const integerMatch = type.match(integerRegex)\n      if (\n        integerMatch &&\n        (typeof value === 'number' || typeof value === 'bigint')\n      ) {\n        const [_type, base, size_] = integerMatch\n        // If number cannot be cast to a sized hex value, it is out of range\n        // and will throw.\n        numberToHex(value, {\n          signed: base === 'int',\n          size: Number.parseInt(size_) / 8,\n        })\n      }\n\n      if (type === 'address' && typeof value === 'string' && !isAddress(value))\n        throw new InvalidAddressError({ address: value })\n\n      const bytesMatch = type.match(bytesRegex)\n      if (bytesMatch) {\n        const [_type, size_] = bytesMatch\n        if (size_ && size(value as Hex) !== Number.parseInt(size_))\n          throw new BytesSizeMismatchError({\n            expectedSize: Number.parseInt(size_),\n            givenSize: size(value as Hex),\n          })\n      }\n\n      const struct = types[type]\n      if (struct) {\n        validateReference(type)\n        validateData(struct, value as Record<string, unknown>)\n      }\n    }\n  }\n\n  // Validate domain types.\n  if (types.EIP712Domain && domain) {\n    if (typeof domain !== 'object') throw new InvalidDomainError({ domain })\n    validateData(types.EIP712Domain, domain)\n  }\n\n  // Validate message types.\n  if (primaryType !== 'EIP712Domain') {\n    if (types[primaryType]) validateData(types[primaryType], message)\n    else throw new InvalidPrimaryTypeError({ primaryType, types })\n  }\n}\n\nexport type GetTypesForEIP712DomainErrorType = ErrorType\n\nexport function getTypesForEIP712Domain({\n  domain,\n}: { domain?: TypedDataDomain | undefined }): TypedDataParameter[] {\n  return [\n    typeof domain?.name === 'string' && { name: 'name', type: 'string' },\n    domain?.version && { name: 'version', type: 'string' },\n    (typeof domain?.chainId === 'number' ||\n      typeof domain?.chainId === 'bigint') && {\n      name: 'chainId',\n      type: 'uint256',\n    },\n    domain?.verifyingContract && {\n      name: 'verifyingContract',\n      type: 'address',\n    },\n    domain?.salt && { name: 'salt', type: 'bytes32' },\n  ].filter(Boolean) as TypedDataParameter[]\n}\n\nexport type DomainSeparatorErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | ErrorType\n\nexport function domainSeparator({ domain }: { domain: TypedDataDomain }): Hex {\n  return hashDomain({\n    domain,\n    types: {\n      EIP712Domain: getTypesForEIP712Domain({ domain }),\n    },\n  })\n}\n\n/** @internal */\nfunction validateReference(type: string) {\n  // Struct type must not be a Solidity type.\n  if (\n    type === 'address' ||\n    type === 'bool' ||\n    type === 'string' ||\n    type.startsWith('bytes') ||\n    type.startsWith('uint') ||\n    type.startsWith('int')\n  )\n    throw new InvalidStructTypeError({ type })\n}\n","// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\n\nimport type { AbiParameter, TypedData, TypedDataDomain } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from '../abi/encodeAbiParameters.js'\nimport { concat } from '../data/concat.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type GetTypesForEIP712DomainErrorType,\n  type ValidateTypedDataErrorType,\n  getTypesForEIP712Domain,\n  validateTypedData,\n} from '../typedData.js'\n\ntype MessageTypeProperty = {\n  name: string\n  type: string\n}\n\nexport type HashTypedDataParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n> = TypedDataDefinition<typedData, primaryType>\n\nexport type HashTypedDataReturnType = Hex\n\nexport type HashTypedDataErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | HashStructErrorType\n  | ValidateTypedDataErrorType\n  | ErrorType\n\nexport function hashTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(\n  parameters: HashTypedDataParameters<typedData, primaryType>,\n): HashTypedDataReturnType {\n  const {\n    domain = {},\n    message,\n    primaryType,\n  } = parameters as HashTypedDataParameters\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...parameters.types,\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({\n    domain,\n    message,\n    primaryType,\n    types,\n  })\n\n  const parts: Hex[] = ['0x1901']\n  if (domain)\n    parts.push(\n      hashDomain({\n        domain,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  if (primaryType !== 'EIP712Domain')\n    parts.push(\n      hashStruct({\n        data: message,\n        primaryType,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  return keccak256(concat(parts))\n}\n\nexport type HashDomainErrorType = HashStructErrorType | ErrorType\n\nexport function hashDomain({\n  domain,\n  types,\n}: {\n  domain: TypedDataDomain\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  return hashStruct({\n    data: domain,\n    primaryType: 'EIP712Domain',\n    types,\n  })\n}\n\nexport type HashStructErrorType =\n  | EncodeDataErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\nexport function hashStruct({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encoded = encodeData({\n    data,\n    primaryType,\n    types,\n  })\n  return keccak256(encoded)\n}\n\ntype EncodeDataErrorType =\n  | EncodeAbiParametersErrorType\n  | EncodeFieldErrorType\n  | HashTypeErrorType\n  | ErrorType\n\nfunction encodeData({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encodedTypes: AbiParameter[] = [{ type: 'bytes32' }]\n  const encodedValues: unknown[] = [hashType({ primaryType, types })]\n\n  for (const field of types[primaryType]) {\n    const [type, value] = encodeField({\n      types,\n      name: field.name,\n      type: field.type,\n      value: data[field.name],\n    })\n    encodedTypes.push(type)\n    encodedValues.push(value)\n  }\n\n  return encodeAbiParameters(encodedTypes, encodedValues)\n}\n\ntype HashTypeErrorType =\n  | ToHexErrorType\n  | EncodeTypeErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\nfunction hashType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encodedHashType = toHex(encodeType({ primaryType, types }))\n  return keccak256(encodedHashType)\n}\n\ntype EncodeTypeErrorType = FindTypeDependenciesErrorType\n\nexport function encodeType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  let result = ''\n  const unsortedDeps = findTypeDependencies({ primaryType, types })\n  unsortedDeps.delete(primaryType)\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()]\n  for (const type of deps) {\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`\n  }\n\n  return result\n}\n\ntype FindTypeDependenciesErrorType = ErrorType\n\nfunction findTypeDependencies(\n  {\n    primaryType: primaryType_,\n    types,\n  }: {\n    primaryType: string\n    types: Record<string, readonly MessageTypeProperty[]>\n  },\n  results: Set<string> = new Set(),\n): Set<string> {\n  const match = primaryType_.match(/^\\w*/u)\n  const primaryType = match?.[0]!\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results\n  }\n\n  results.add(primaryType)\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies({ primaryType: field.type, types }, results)\n  }\n  return results\n}\n\ntype EncodeFieldErrorType =\n  | Keccak256ErrorType\n  | EncodeAbiParametersErrorType\n  | ToHexErrorType\n  | ErrorType\n\nfunction encodeField({\n  types,\n  name,\n  type,\n  value,\n}: {\n  types: Record<string, readonly MessageTypeProperty[]>\n  name: string\n  type: string\n  value: any\n}): [type: AbiParameter, value: any] {\n  if (types[type] !== undefined) {\n    return [\n      { type: 'bytes32' },\n      keccak256(encodeData({ data: value, primaryType: type, types })),\n    ]\n  }\n\n  if (type === 'bytes') {\n    const prepend = value.length % 2 ? '0' : ''\n    value = `0x${prepend + value.slice(2)}`\n    return [{ type: 'bytes32' }, keccak256(value)]\n  }\n\n  if (type === 'string') return [{ type: 'bytes32' }, keccak256(toHex(value))]\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    const parsedType = type.slice(0, type.lastIndexOf('['))\n    const typeValuePairs = (value as [AbiParameter, any][]).map((item) =>\n      encodeField({\n        name,\n        type: parsedType,\n        types,\n        value: item,\n      }),\n    )\n    return [\n      { type: 'bytes32' },\n      keccak256(\n        encodeAbiParameters(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ]\n  }\n\n  return [{ type }, value]\n}\n","const MAGIC_VALUE = '0x1626ba7e';\nconst MAGIC_VALUE_BYTES = '0x20c13b0b';\n\nexport { MAGIC_VALUE, MAGIC_VALUE_BYTES };\n","export type Permission = {\n  parentCapability: string;\n  invoker: string;\n  date?: number;\n  caveats?: PermissionCaveat[];\n};\n\nexport type PermissionRequest = {\n  [method: string]: Record<string, unknown>;\n};\n\nexport type PermissionCaveat = {\n  type: string;\n  value?: unknown;\n  name?: string;\n};\n\nexport const PERMISSIONS_REQUEST_REJECTED = 4001;\n\nexport class PermissionsError extends Error {\n  public code: number;\n  public data?: unknown;\n\n  constructor(message: string, code: number, data?: unknown) {\n    super(message);\n\n    this.code = code;\n    this.data = data;\n\n    // Should adjust prototype manually because how TS handles the type extension compilation\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, PermissionsError.prototype);\n  }\n}\n","import { Methods, RestrictedMethods } from '../communication/methods.js';\nimport { Communicator } from '../types/index.js';\nimport { PermissionRequest, Permission, PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\n\nclass Wallet {\n  private readonly communicator: Communicator;\n\n  constructor(communicator: Communicator) {\n    this.communicator = communicator;\n  }\n\n  async getPermissions(): Promise<Permission[]> {\n    const response = await this.communicator.send<Methods.wallet_getPermissions, undefined, Permission[]>(\n      Methods.wallet_getPermissions,\n      undefined,\n    );\n\n    return response.data;\n  }\n\n  async requestPermissions(permissions: PermissionRequest[]): Promise<Permission[]> {\n    if (!this.isPermissionRequestValid(permissions)) {\n      throw new PermissionsError('Permissions request is invalid', PERMISSIONS_REQUEST_REJECTED);\n    }\n\n    try {\n      const response = await this.communicator.send<\n        Methods.wallet_requestPermissions,\n        PermissionRequest[],\n        Permission[]\n      >(Methods.wallet_requestPermissions, permissions);\n\n      return response.data;\n    } catch {\n      throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n    }\n  }\n\n  isPermissionRequestValid(permissions: PermissionRequest[]): boolean {\n    return permissions.every((pr: PermissionRequest) => {\n      if (typeof pr === 'object') {\n        return Object.keys(pr).every((method) => {\n          if (Object.values(RestrictedMethods).includes(method as RestrictedMethods)) {\n            return true;\n          }\n\n          return false;\n        });\n      }\n\n      return false;\n    });\n  }\n}\n\nexport { Wallet };\n","import { Methods } from '../communication/index.js';\nimport { Safe } from '../safe/index.js';\nimport { Wallet } from '../wallet/index.js';\n\nimport { Permission, PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\n\nconst hasPermission = (required: Methods, permissions: Permission[]): boolean =>\n  permissions.some((permission) => permission.parentCapability === required);\n\nconst requirePermission = () => (_: unknown, propertyKey: string, descriptor: PropertyDescriptor) => {\n  const originalMethod = descriptor.value;\n\n  descriptor.value = async function () {\n    // @ts-expect-error accessing private property from decorator. 'this' context is the class instance\n    const wallet = new Wallet((this as Safe).communicator);\n\n    let currentPermissions = await wallet.getPermissions();\n\n    if (!hasPermission(propertyKey as Methods, currentPermissions)) {\n      currentPermissions = await wallet.requestPermissions([{ [propertyKey as Methods]: {} }]);\n    }\n\n    if (!hasPermission(propertyKey as Methods, currentPermissions)) {\n      throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n    }\n\n    return originalMethod.apply(this);\n  };\n\n  return descriptor;\n};\n\nexport default requirePermission;\n","import { encodeFunctionData, Address, hashMessage, hashTypedData } from 'viem';\nimport { MAGIC_VALUE_BYTES, MAGIC_VALUE } from './signatures.js';\nimport { Methods } from '../communication/methods.js';\nimport { RPC_CALLS } from '../eth/constants.js';\nimport {\n  Communicator,\n  ChainInfo,\n  SafeBalances,\n  GetBalanceParams,\n  RPCPayload,\n  TransactionConfig,\n  EnvironmentInfo,\n  AddressBookItem,\n  isObjectEIP712TypedData,\n  EIP712TypedData,\n  SafeInfoExtended,\n} from '../types/index.js';\nimport requirePermission from '../decorators/requirePermissions.js';\n\nclass Safe {\n  private readonly communicator: Communicator;\n\n  constructor(communicator: Communicator) {\n    this.communicator = communicator;\n  }\n\n  async getChainInfo(): Promise<ChainInfo> {\n    const response = await this.communicator.send<Methods.getChainInfo, undefined, ChainInfo>(\n      Methods.getChainInfo,\n      undefined,\n    );\n\n    return response.data;\n  }\n\n  async getInfo(): Promise<SafeInfoExtended> {\n    const response = await this.communicator.send<Methods.getSafeInfo, undefined, SafeInfoExtended>(\n      Methods.getSafeInfo,\n      undefined,\n    );\n\n    return response.data;\n  }\n\n  // There is a possibility that this method will change because we may add pagination to the endpoint\n  async experimental_getBalances({ currency = 'usd' }: GetBalanceParams = {}): Promise<SafeBalances> {\n    const response = await this.communicator.send<Methods.getSafeBalances, { currency: string }, SafeBalances>(\n      Methods.getSafeBalances,\n      {\n        currency,\n      },\n    );\n\n    return response.data;\n  }\n\n  private async check1271Signature(messageHash: string, signature = '0x'): Promise<boolean> {\n    const safeInfo = await this.getInfo();\n\n    const encodedIsValidSignatureCall = encodeFunctionData({\n      abi: [\n        {\n          constant: false,\n          inputs: [\n            {\n              name: '_dataHash',\n              type: 'bytes32',\n            },\n            {\n              name: '_signature',\n              type: 'bytes',\n            },\n          ],\n          name: 'isValidSignature',\n          outputs: [\n            {\n              name: '',\n              type: 'bytes4',\n            },\n          ],\n          payable: false,\n          stateMutability: 'nonpayable',\n          type: 'function',\n        },\n      ] as const,\n      functionName: 'isValidSignature',\n      args: [messageHash as Address, signature as Address],\n    });\n\n    const payload = {\n      call: RPC_CALLS.eth_call,\n      params: [\n        {\n          to: safeInfo.safeAddress,\n          data: encodedIsValidSignatureCall,\n        },\n        'latest',\n      ],\n    };\n    try {\n      const response = await this.communicator.send<Methods.rpcCall, RPCPayload<[TransactionConfig, string]>, string>(\n        Methods.rpcCall,\n        payload,\n      );\n\n      return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  private async check1271SignatureBytes(messageHash: string, signature = '0x'): Promise<boolean> {\n    const safeInfo = await this.getInfo();\n\n    const encodedIsValidSignatureCall = encodeFunctionData({\n      abi: [\n        {\n          constant: false,\n          inputs: [\n            {\n              name: '_data',\n              type: 'bytes',\n            },\n            {\n              name: '_signature',\n              type: 'bytes',\n            },\n          ],\n          name: 'isValidSignature',\n          outputs: [\n            {\n              name: '',\n              type: 'bytes4',\n            },\n          ],\n          payable: false,\n          stateMutability: 'nonpayable',\n          type: 'function',\n        },\n      ] as const,\n      functionName: 'isValidSignature',\n      args: [messageHash as Address, signature as Address],\n    });\n\n    const payload = {\n      call: RPC_CALLS.eth_call,\n      params: [\n        {\n          to: safeInfo.safeAddress,\n          data: encodedIsValidSignatureCall,\n        },\n        'latest',\n      ],\n    };\n\n    try {\n      const response = await this.communicator.send<Methods.rpcCall, RPCPayload<[TransactionConfig, string]>, string>(\n        Methods.rpcCall,\n        payload,\n      );\n\n      return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE_BYTES;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  calculateMessageHash(message: string): string {\n    return hashMessage(message);\n  }\n\n  calculateTypedMessageHash(typedMessage: EIP712TypedData): string {\n    const chainId =\n      typeof typedMessage.domain.chainId === 'object'\n        ? typedMessage.domain.chainId.toNumber()\n        : Number(typedMessage.domain.chainId);\n\n    let primaryType = typedMessage.primaryType;\n    if (!primaryType) {\n      const fields = Object.values(typedMessage.types);\n      // We try to infer primaryType (simplified ether's version)\n      const primaryTypes = Object.keys(typedMessage.types).filter((typeName) =>\n        fields.every((dataTypes) => dataTypes.every(({ type }) => type.replace('[', '').replace(']', '') !== typeName)),\n      );\n      if (primaryTypes.length === 0 || primaryTypes.length > 1) throw new Error('Please specify primaryType');\n      primaryType = primaryTypes[0];\n    }\n\n    return hashTypedData({\n      message: typedMessage.message,\n      domain: {\n        ...typedMessage.domain,\n        chainId,\n        verifyingContract: typedMessage.domain.verifyingContract as Address,\n        salt: typedMessage.domain.salt as Address,\n      },\n      types: typedMessage.types,\n      primaryType,\n    });\n  }\n\n  async getOffChainSignature(messageHash: string): Promise<string> {\n    const response = await this.communicator.send<Methods.getOffChainSignature, string, string>(\n      Methods.getOffChainSignature,\n      messageHash,\n    );\n\n    return response.data;\n  }\n\n  async isMessageSigned(message: string | EIP712TypedData, signature = '0x'): Promise<boolean> {\n    let check: (() => Promise<boolean>) | undefined;\n    if (typeof message === 'string') {\n      check = async (): Promise<boolean> => {\n        const messageHash = this.calculateMessageHash(message);\n        const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n        return messageHashSigned;\n      };\n    }\n\n    if (isObjectEIP712TypedData(message)) {\n      check = async (): Promise<boolean> => {\n        const messageHash = this.calculateTypedMessageHash(message);\n        const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n        return messageHashSigned;\n      };\n    }\n    if (check) {\n      const isValid = await check();\n\n      return isValid;\n    }\n\n    throw new Error('Invalid message type');\n  }\n\n  async isMessageHashSigned(messageHash: string, signature = '0x'): Promise<boolean> {\n    const checks = [this.check1271Signature.bind(this), this.check1271SignatureBytes.bind(this)];\n\n    for (const check of checks) {\n      const isValid = await check(messageHash, signature);\n      if (isValid) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getEnvironmentInfo(): Promise<EnvironmentInfo> {\n    const response = await this.communicator.send<Methods.getEnvironmentInfo, undefined, EnvironmentInfo>(\n      Methods.getEnvironmentInfo,\n      undefined,\n    );\n\n    return response.data;\n  }\n\n  @requirePermission()\n  async requestAddressBook(): Promise<AddressBookItem[]> {\n    const response = await this.communicator.send<Methods.requestAddressBook, undefined, AddressBookItem[]>(\n      Methods.requestAddressBook,\n      undefined,\n    );\n\n    return response.data;\n  }\n}\n\nexport { Safe };\n","import { Communicator } from './types/index.js';\nimport InterfaceCommunicator from './communication/index.js';\nimport { TXs } from './txs/index.js';\nimport { Eth } from './eth/index.js';\nimport { Safe } from './safe/index.js';\nimport { Wallet } from './wallet/index.js';\n\nexport type Opts = {\n  allowedDomains?: RegExp[];\n  debug?: boolean;\n};\n\nclass SafeAppsSDK {\n  private readonly communicator: Communicator;\n  public readonly eth: Eth;\n  public readonly txs: TXs;\n  public readonly safe: Safe;\n  public readonly wallet: Wallet;\n\n  constructor(opts: Opts = {}) {\n    const { allowedDomains = null, debug = false } = opts;\n\n    this.communicator = new InterfaceCommunicator(allowedDomains, debug);\n    this.eth = new Eth(this.communicator);\n    this.txs = new TXs(this.communicator);\n    this.safe = new Safe(this.communicator);\n    this.wallet = new Wallet(this.communicator);\n  }\n}\n\nexport default SafeAppsSDK;\n","import SDK from './sdk.js';\n\nexport default SDK;\nexport * from './sdk.js';\nexport * from './types/index.js';\nexport * from './communication/methods.js';\nexport * from './communication/messageFormatter.js';\nexport { getSDKVersion } from './version.js';\nexport * from './eth/constants.js';\n"],"names":["exports","utils_1","require","makeUrl","baseUrl","path","pathParams","query","insertParams","stringifyQuery","params","url","fetchData","body","headers","credentials","rawUrl","getData","undefined","endpoint_1","config_1","__exportStar","DEFAULT_BASE_URL","chainId","postEndpoint","address","getEndpoint","pageUrl","currency","arguments","length","safe_address","transactionId","safeTxHash","signature","deleteEndpoint","safeAddress","data","to","value","encodedData","messageHash","message_hash","uuid","signerAddress","putEndpoint","signer","safes","Object","assign","join","contractAddress","RPC_AUTHENTICATION","GAS_PRICE_TYPE","FEATURES","TokenType","ConfirmationViewTypes","NativeStakingStatus","DeviceType","SafeAppAccessPolicyTypes","SafeAppFeatures","SafeAppSocialPlatforms","ImplementationVersionState","SafeMessageListItemType","SafeMessageStatus","Operation","TransactionStatus","TransferDirection","TransactionTokenType","SettingsInfoType","TransactionInfoType","ConflictType","TransactionListItemType","DetailedExecutionInfoType","DurationType","StartTimeValue","LabelValue","parseResponse","resp","json","_a","ok","errTxt","code","message","statusText","Error","template","keys","reduce","result","key","str","replace","RegExp","replaceParam","String","searchParams","URLSearchParams","forEach","append","searchString","toString","method","requestHeaders","options","JSON","stringify","fetch","dec2hex","dec","padStart","generateRequestId","window","len","arr","Uint8Array","crypto","getRandomValues","Array","from","generateId","Date","getTime","MessageFormatter","Methods","RestrictedMethods","makeRequest","id","env","sdkVersion","makeResponse","version","success","makeErrorResponse","error","constructor","allowedOrigins","debugMode","callbacks","Map","isServer","isValidMessage","_ref","origin","source","emptyOrMalformed","sentFromParentEl","this","parent","majorVersionNumber","parseInt","split","allowedSDKVersion","validOrigin","isArray","find","regExp","test","logIncomingMessage","msg","console","info","onParentMessage","handleIncomingMessage","payload","cb","get","delete","send","request","postMessage","Promise","resolve","reject","set","response","addEventListener","isObjectEIP712TypedData","obj","TXs","communicator","getBySafeTxHash","getTxBySafeTxHash","signMessage","messagePayload","signTypedMessage","typedData","txs","sendTransactions","RPC_CALLS","inputFormatters","defaultBlockParam","returnFullTxObjectParam","blockNumberToHex","arg","Number","isInteger","Eth","call","buildRequest","formatters","getBalance","getCode","getStorageAt","getPastLogs","getBlockByHash","getBlockByNumber","getTransactionByHash","getTransactionReceipt","getTransactionCount","getGasPrice","getEstimateGas","transaction","setSafeSettings","args","async","formatter","i","rpcCall","docsPath","encodeFunctionData","parameters","abi","functionName","startsWith","abiItem","item","getAbiItem","name","AbiFunctionNotFoundError","type","toFunctionSelector","formatAbiItem","prepareEncodeFunctionData","inputs","encodeAbiParameters","concatHex","hashMessage","to_","keccak256","message_","stringToHex","raw","bytesToHex","prefix","size","concat","toPrefixedMessage","InvalidDomainError","BaseError","domain","super","metaMessages","InvalidPrimaryTypeError","_ref2","primaryType","types","InvalidStructTypeError","_ref3","getTypesForEIP712Domain","verifyingContract","salt","filter","Boolean","validateReference","hashTypedData","EIP712Domain","validateData","struct","param","integerMatch","match","integerRegex","_type","base","size_","numberToHex","signed","isAddress","InvalidAddressError","bytesMatch","bytesRegex","BytesSizeMismatchError","expectedSize","givenSize","validateTypedData","parts","push","hashStruct","hashDomain","encoded","encodeData","encodedTypes","encodedValues","hashType","field","encodeField","_ref4","encodedHashType","toHex","_ref5","unsortedDeps","findTypeDependencies","deps","sort","map","_ref6","t","encodeType","_ref7","primaryType_","results","Set","has","add","_ref8","slice","lastIndexOf","parsedType","typeValuePairs","_ref9","_ref10","v","PERMISSIONS_REQUEST_REJECTED","PermissionsError","setPrototypeOf","prototype","Wallet","getPermissions","wallet_getPermissions","requestPermissions","permissions","isPermissionRequestValid","wallet_requestPermissions","every","pr","values","includes","hasPermission","required","some","permission","parentCapability","requirePermission","_","propertyKey","descriptor","originalMethod","wallet","currentPermissions","apply","Safe","getChainInfo","getInfo","getSafeInfo","experimental_getBalances","getSafeBalances","check1271Signature","safeInfo","encodedIsValidSignatureCall","constant","outputs","payable","stateMutability","toLowerCase","err","check1271SignatureBytes","calculateMessageHash","calculateTypedMessageHash","typedMessage","toNumber","fields","primaryTypes","typeName","dataTypes","getOffChainSignature","isMessageSigned","check","isMessageHashSigned","checks","bind","getEnvironmentInfo","requestAddressBook","__decorate","opts","allowedDomains","debug","InterfaceCommunicator","eth","safe"],"sourceRoot":""}